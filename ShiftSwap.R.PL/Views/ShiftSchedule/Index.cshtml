@model List<ShiftSwap.R.PL.Dtos.AgentReadDto>

@{
    ViewData["Title"] = "Available Agents";

    var today = DateTime.Today;
    var tomorrow = today.AddDays(1);
    var endOfNextWeek = today.AddDays(14); 

    string formattedSelectedDate = null;
    if (DateTime.TryParse(ViewBag.SearchDate as string, out var parsedDate))
    {
        if (parsedDate >= tomorrow && parsedDate <= endOfNextWeek)
            formattedSelectedDate = parsedDate.ToString("yyyy-MM-dd");
    }

    var isAgent = ViewBag.IsAgent as bool? ?? false;
}



<style>
    :root {
        --raya-navy: #002147;
        --raya-cyan: #00a8e8;
    }

    h2, h4 {
        color: var(--raya-navy);
        font-weight: 700;
    }

    .card {
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 6px 16px rgba(0,0,0,0.12);
        margin-bottom: 25px;
        background: #fff;
    }

    .card-header {
        background: linear-gradient(135deg, var(--raya-navy), var(--raya-cyan));
        color: white;
        font-weight: 600;
        padding: 15px 20px;
    }

    .btn-raya {
        background: linear-gradient(135deg, var(--raya-navy), var(--raya-cyan));
        border: none;
        padding: 10px 18px;
        border-radius: 10px;
        color: white !important;
        font-weight: 600;
        transition: 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
    }

        .btn-raya:hover {
            opacity: 0.95;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        }

    .btn-details {
        border-radius: 8px;
        padding: 6px 14px;
        font-weight: 600;
        background: white;
        border: 2px solid var(--raya-cyan);
        color: var(--raya-navy);
        transition: 0.3s ease;
    }

        .btn-details:hover {
            background: var(--raya-cyan);
            color: white;
        }

    .input-group .form-control {
        border-radius: 0 10px 10px 0;
        transition: 0.3s ease;
    }

    .input-group-text {
        border-radius: 10px 0 0 10px;
        font-size: 1.1rem;
        background: #f8f9fa;
    }

    .form-control:focus {
        box-shadow: 0 0 8px rgba(0,168,232,0.5);
        border-color: var(--raya-cyan);
    }

    thead {
        background: var(--raya-navy);
        color: white;
    }

    tbody tr:hover {
        background-color: #f2f8ff;
    }

    .badge {
        font-size: 0.85rem;
        padding: 6px 10px;
        border-radius: 8px;
    }

    .alert {
        border-radius: 12px;
        font-weight: 500;
    }
</style>

<div class="card">
    <div class="card-header">
        <h4 class="mb-0">Available Agents</h4>
    </div>
    <div class="card-body">

        <form method="get" asp-action="Index" class="mb-4">
            <div class="row g-3 align-items-end">
                <div class="col-md-5">
                    <label class="form-label fw-semibold text-dark">Select Date</label>
                    <div class="input-group">
                        <span class="input-group-text">📅</span>
                        <input type="date" name="date" 
                               id="datePicker"
                               class="form-control" 
                               value="@formattedSelectedDate"
                               min="@tomorrow.ToString("yyyy-MM-dd")" 
                               max="@endOfNextWeek.ToString("yyyy-MM-dd")" />
                    </div>
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn-raya w-100">
                        🔍 <span>Search</span>
                    </button>
                </div>
            </div>
        </form>

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered align-middle">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>HRID</th>
                            <th>Login ID</th>
                            <th>NTName</th>
                            <th>Role</th>
                            <th>Project</th>
                            <th>Team Leader</th>
                            @if (isAgent)
                            {
                                <th>Shift Start</th>
                                <th>Shift End</th>
                                <th>Actions</th>
                            }
                            else
                            {
                                <th>Actions</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var agent in Model)
                        {
                            <tr>
                                <td>@agent.Name</td>
                                <td>@agent.HRID</td>
                                <td>@agent.LoginID</td>
                                <td>@agent.NTName</td>
                                <td>@agent.Role</td>
                                <td>@agent.ProjectName</td>
                                <td>@agent.TeamLeaderName</td>

                                @if (isAgent)
                                {
                                    <td>@(agent.Shift == "OFF" ? "OFF" : agent.ShiftStart)</td>
                                    <td>@(agent.Shift == "OFF" ? "OFF" : agent.ShiftEnd)</td>

                                    <td>
                                        <a asp-controller="ShiftSwapRequest"
                                           asp-action="Create"
                                           asp-route-targetAgentId="@agent.Id"
                                           asp-route-swapDate="@formattedSelectedDate"
                                           class="btn btn-warning btn-sm">
                                            🔄 Request Swap
                                        </a>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <a asp-action="Details" asp-route-id="@agent.Id" class="btn-details btn-sm">
                                            ℹ️ Details
                                        </a>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info mt-3">
                No available agents for the selected date.
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        const dateInput = document.getElementById('datePicker');
        dateInput.addEventListener('input', function () {
            const min = new Date(this.min);
            const max = new Date(this.max);
            const selected = new Date(this.value);
            if (selected < min) this.value = this.min;
            if (selected > max) this.value = this.max;
        });
    </script>
}

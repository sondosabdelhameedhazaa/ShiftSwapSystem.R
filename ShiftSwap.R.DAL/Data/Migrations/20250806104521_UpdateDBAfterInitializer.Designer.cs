// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftSwap.R.DAL.Data.Contexts;

#nullable disable

namespace ShiftSwap.R.DAL.Data.Migrations
{
    [DbContext(typeof(ShiftSwapDbContext))]
    [Migration("20250806104521_UpdateDBAfterInitializer")]
    partial class UpdateDBAfterInitializer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HRID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoginID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NTName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("TeamLeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TeamLeaderId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.ShiftSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ShiftEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftStart")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("ShiftSchedules");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.ShiftSwapRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestorAgentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SwapDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TargetAgentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("RequestorAgentId");

                    b.HasIndex("TargetAgentId");

                    b.ToTable("ShiftSwapRequests");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.Agent", b =>
                {
                    b.HasOne("ShiftSwap.R.DAL.Models.Project", "Project")
                        .WithMany("Agents")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftSwap.R.DAL.Models.Agent", "TeamLeader")
                        .WithMany()
                        .HasForeignKey("TeamLeaderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("TeamLeader");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.ShiftSchedule", b =>
                {
                    b.HasOne("ShiftSwap.R.DAL.Models.Agent", "Agent")
                        .WithMany("ShiftSchedules")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.ShiftSwapRequest", b =>
                {
                    b.HasOne("ShiftSwap.R.DAL.Models.Agent", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ShiftSwap.R.DAL.Models.Agent", "RequestorAgent")
                        .WithMany("SentSwapRequests")
                        .HasForeignKey("RequestorAgentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSwap.R.DAL.Models.Agent", "TargetAgent")
                        .WithMany("ReceivedSwapRequests")
                        .HasForeignKey("TargetAgentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("RequestorAgent");

                    b.Navigation("TargetAgent");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.Agent", b =>
                {
                    b.Navigation("ReceivedSwapRequests");

                    b.Navigation("SentSwapRequests");

                    b.Navigation("ShiftSchedules");
                });

            modelBuilder.Entity("ShiftSwap.R.DAL.Models.Project", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
